name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Weekly tests run every Saturday on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "34 2 * * 6"

concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
        # Only test lowest and highest version on the expensive/slow
        # macOS and windows runners (UPDATE when supported versions change):
        exclude:
        - os: macOS-latest
          python-version: 3.6
        - os: macOS-latest
          python-version: 3.7
        - os: macOS-latest
          python-version: 3.8
        - os: macOS-latest
          python-version: 3.9
        - os: windows-latest
          python-version: 3.6
        - os: windows-latest
          python-version: 3.7
        - os: windows-latest
          python-version: 3.8
        - os: windows-latest
          python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Install pytest, pytest plugins
      run: |
        python -m pip install wheel
        python -m pip install pytest pytest-cov pytest-pep8

    - name: Install package
      run: |
        python -m pip install .

    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        pytest -v --cov=alchemtest --cov-report=xml --color=yes src/alchemtest/tests

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}      
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true


  pypi_check:
    name: Check source package integrity (for PyPi deployment)
    if: "github.repository == 'alchemistry/alchemtest'"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install tools
      run: |
        python -m pip install setuptools twine
        
    - name: Build alchemtest source dist
      run: |
        python setup.py sdist
        
    - name: Check package build sdist
      run: |
        DISTRIBUTION=$(ls -t1 dist/alchemtest-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no distribution dist/alchemtest-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION
